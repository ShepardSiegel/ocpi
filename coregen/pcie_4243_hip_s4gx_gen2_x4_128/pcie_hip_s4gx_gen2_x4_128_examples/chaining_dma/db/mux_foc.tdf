--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="Stratix IV" IGNORE_CASCADE_BUFFERS="OFF" LPM_SIZE=8 LPM_WIDTH=4 LPM_WIDTHS=3 data result sel
--VERSION_BEGIN 10.1SP1 cbx_lpm_mux 2011:01:19:21:23:41:SJ cbx_mgl 2011:01:19:21:24:50:SJ  VERSION_END


-- Copyright (C) 1991-2011 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 10 
SUBDESIGN mux_foc
( 
	data[31..0]	:	input;
	result[3..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE
	l1_w0_n0_mux_dataout	:	WIRE;
	l1_w0_n1_mux_dataout	:	WIRE;
	l1_w0_n2_mux_dataout	:	WIRE;
	l1_w0_n3_mux_dataout	:	WIRE;
	l1_w1_n0_mux_dataout	:	WIRE;
	l1_w1_n1_mux_dataout	:	WIRE;
	l1_w1_n2_mux_dataout	:	WIRE;
	l1_w1_n3_mux_dataout	:	WIRE;
	l1_w2_n0_mux_dataout	:	WIRE;
	l1_w2_n1_mux_dataout	:	WIRE;
	l1_w2_n2_mux_dataout	:	WIRE;
	l1_w2_n3_mux_dataout	:	WIRE;
	l1_w3_n0_mux_dataout	:	WIRE;
	l1_w3_n1_mux_dataout	:	WIRE;
	l1_w3_n2_mux_dataout	:	WIRE;
	l1_w3_n3_mux_dataout	:	WIRE;
	l2_w0_n0_mux_dataout	:	WIRE;
	l2_w0_n1_mux_dataout	:	WIRE;
	l2_w1_n0_mux_dataout	:	WIRE;
	l2_w1_n1_mux_dataout	:	WIRE;
	l2_w2_n0_mux_dataout	:	WIRE;
	l2_w2_n1_mux_dataout	:	WIRE;
	l2_w3_n0_mux_dataout	:	WIRE;
	l2_w3_n1_mux_dataout	:	WIRE;
	l3_w0_n0_mux_dataout	:	WIRE;
	l3_w1_n0_mux_dataout	:	WIRE;
	l3_w2_n0_mux_dataout	:	WIRE;
	l3_w3_n0_mux_dataout	:	WIRE;
	data_wire[55..0]	: WIRE;
	result_wire_ext[3..0]	: WIRE;
	sel_wire[8..0]	: WIRE;

BEGIN 
	l1_w0_n0_mux_dataout = sel_wire[0..0] & data_wire[4..4] # !(sel_wire[0..0]) & data_wire[0..0];
	l1_w0_n1_mux_dataout = sel_wire[0..0] & data_wire[12..12] # !(sel_wire[0..0]) & data_wire[8..8];
	l1_w0_n2_mux_dataout = sel_wire[0..0] & data_wire[20..20] # !(sel_wire[0..0]) & data_wire[16..16];
	l1_w0_n3_mux_dataout = sel_wire[0..0] & data_wire[28..28] # !(sel_wire[0..0]) & data_wire[24..24];
	l1_w1_n0_mux_dataout = sel_wire[0..0] & data_wire[5..5] # !(sel_wire[0..0]) & data_wire[1..1];
	l1_w1_n1_mux_dataout = sel_wire[0..0] & data_wire[13..13] # !(sel_wire[0..0]) & data_wire[9..9];
	l1_w1_n2_mux_dataout = sel_wire[0..0] & data_wire[21..21] # !(sel_wire[0..0]) & data_wire[17..17];
	l1_w1_n3_mux_dataout = sel_wire[0..0] & data_wire[29..29] # !(sel_wire[0..0]) & data_wire[25..25];
	l1_w2_n0_mux_dataout = sel_wire[0..0] & data_wire[6..6] # !(sel_wire[0..0]) & data_wire[2..2];
	l1_w2_n1_mux_dataout = sel_wire[0..0] & data_wire[14..14] # !(sel_wire[0..0]) & data_wire[10..10];
	l1_w2_n2_mux_dataout = sel_wire[0..0] & data_wire[22..22] # !(sel_wire[0..0]) & data_wire[18..18];
	l1_w2_n3_mux_dataout = sel_wire[0..0] & data_wire[30..30] # !(sel_wire[0..0]) & data_wire[26..26];
	l1_w3_n0_mux_dataout = sel_wire[0..0] & data_wire[7..7] # !(sel_wire[0..0]) & data_wire[3..3];
	l1_w3_n1_mux_dataout = sel_wire[0..0] & data_wire[15..15] # !(sel_wire[0..0]) & data_wire[11..11];
	l1_w3_n2_mux_dataout = sel_wire[0..0] & data_wire[23..23] # !(sel_wire[0..0]) & data_wire[19..19];
	l1_w3_n3_mux_dataout = sel_wire[0..0] & data_wire[31..31] # !(sel_wire[0..0]) & data_wire[27..27];
	l2_w0_n0_mux_dataout = sel_wire[4..4] & data_wire[33..33] # !(sel_wire[4..4]) & data_wire[32..32];
	l2_w0_n1_mux_dataout = sel_wire[4..4] & data_wire[35..35] # !(sel_wire[4..4]) & data_wire[34..34];
	l2_w1_n0_mux_dataout = sel_wire[4..4] & data_wire[37..37] # !(sel_wire[4..4]) & data_wire[36..36];
	l2_w1_n1_mux_dataout = sel_wire[4..4] & data_wire[39..39] # !(sel_wire[4..4]) & data_wire[38..38];
	l2_w2_n0_mux_dataout = sel_wire[4..4] & data_wire[41..41] # !(sel_wire[4..4]) & data_wire[40..40];
	l2_w2_n1_mux_dataout = sel_wire[4..4] & data_wire[43..43] # !(sel_wire[4..4]) & data_wire[42..42];
	l2_w3_n0_mux_dataout = sel_wire[4..4] & data_wire[45..45] # !(sel_wire[4..4]) & data_wire[44..44];
	l2_w3_n1_mux_dataout = sel_wire[4..4] & data_wire[47..47] # !(sel_wire[4..4]) & data_wire[46..46];
	l3_w0_n0_mux_dataout = sel_wire[8..8] & data_wire[49..49] # !(sel_wire[8..8]) & data_wire[48..48];
	l3_w1_n0_mux_dataout = sel_wire[8..8] & data_wire[51..51] # !(sel_wire[8..8]) & data_wire[50..50];
	l3_w2_n0_mux_dataout = sel_wire[8..8] & data_wire[53..53] # !(sel_wire[8..8]) & data_wire[52..52];
	l3_w3_n0_mux_dataout = sel_wire[8..8] & data_wire[55..55] # !(sel_wire[8..8]) & data_wire[54..54];
	data_wire[] = ( l2_w3_n1_mux_dataout, l2_w3_n0_mux_dataout, l2_w2_n1_mux_dataout, l2_w2_n0_mux_dataout, l2_w1_n1_mux_dataout, l2_w1_n0_mux_dataout, l2_w0_n1_mux_dataout, l2_w0_n0_mux_dataout, l1_w3_n3_mux_dataout, l1_w3_n2_mux_dataout, l1_w3_n1_mux_dataout, l1_w3_n0_mux_dataout, l1_w2_n3_mux_dataout, l1_w2_n2_mux_dataout, l1_w2_n1_mux_dataout, l1_w2_n0_mux_dataout, l1_w1_n3_mux_dataout, l1_w1_n2_mux_dataout, l1_w1_n1_mux_dataout, l1_w1_n0_mux_dataout, l1_w0_n3_mux_dataout, l1_w0_n2_mux_dataout, l1_w0_n1_mux_dataout, l1_w0_n0_mux_dataout, data[]);
	result[] = result_wire_ext[];
	result_wire_ext[] = ( l3_w3_n0_mux_dataout, l3_w2_n0_mux_dataout, l3_w1_n0_mux_dataout, l3_w0_n0_mux_dataout);
	sel_wire[] = ( sel[2..2], B"000", sel[1..1], B"000", sel[0..0]);
END;
--VALID FILE
