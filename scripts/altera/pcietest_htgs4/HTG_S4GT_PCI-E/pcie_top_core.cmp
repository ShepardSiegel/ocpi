-- Generated by PCI Express Compiler 10.1 [Altera, IP Toolbench 1.3.0 Build 197]
-- ************************************************************
-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
-- ************************************************************
-- Copyright (C) 1991-2011 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.

component pcie_top_core
	PORT (
		AvlClk_i	: IN STD_LOGIC;
		CraAddress_i	: IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		CraByteEnable_i	: IN STD_LOGIC_VECTOR (3 DOWNTO 0);
		CraChipSelect_i	: IN STD_LOGIC;
		CraRead	: IN STD_LOGIC;
		CraWrite	: IN STD_LOGIC;
		CraWriteData_i	: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
		Rstn_i	: IN STD_LOGIC;
		RxmIrqNum_i	: IN STD_LOGIC_VECTOR (5 DOWNTO 0);
		RxmIrq_i	: IN STD_LOGIC;
		RxmReadDataValid_i	: IN STD_LOGIC;
		RxmReadData_i	: IN STD_LOGIC_VECTOR (63 DOWNTO 0);
		RxmWaitRequest_i	: IN STD_LOGIC;
		TxsAddress_i	: IN STD_LOGIC_VECTOR (16 DOWNTO 0);
		TxsBurstCount_i	: IN STD_LOGIC_VECTOR (9 DOWNTO 0);
		TxsByteEnable_i	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		TxsChipSelect_i	: IN STD_LOGIC;
		TxsRead_i	: IN STD_LOGIC;
		TxsWriteData_i	: IN STD_LOGIC_VECTOR (63 DOWNTO 0);
		TxsWrite_i	: IN STD_LOGIC;
		aer_msi_num	: IN STD_LOGIC_VECTOR (4 DOWNTO 0);
		app_int_sts	: IN STD_LOGIC;
		app_msi_num	: IN STD_LOGIC_VECTOR (4 DOWNTO 0);
		app_msi_req	: IN STD_LOGIC;
		app_msi_tc	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		core_clk_in	: IN STD_LOGIC;
		cpl_err	: IN STD_LOGIC_VECTOR (6 DOWNTO 0);
		cpl_pending	: IN STD_LOGIC;
		crst	: IN STD_LOGIC;
		hpg_ctrler	: IN STD_LOGIC_VECTOR (4 DOWNTO 0);
		lmi_addr	: IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		lmi_din	: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
		lmi_rden	: IN STD_LOGIC;
		lmi_wren	: IN STD_LOGIC;
		npor	: IN STD_LOGIC;
		pclk_central	: IN STD_LOGIC;
		pclk_ch0	: IN STD_LOGIC;
		pex_msi_num	: IN STD_LOGIC_VECTOR (4 DOWNTO 0);
		pld_clk	: IN STD_LOGIC;
		pll_fixed_clk	: IN STD_LOGIC;
		pm_auxpwr	: IN STD_LOGIC;
		pm_data	: IN STD_LOGIC_VECTOR (9 DOWNTO 0);
		pm_event	: IN STD_LOGIC;
		pme_to_cr	: IN STD_LOGIC;
		rc_areset	: IN STD_LOGIC;
		rc_inclk_eq_125mhz	: IN STD_LOGIC;
		rc_pll_locked	: IN STD_LOGIC;
		rc_rx_pll_locked_one	: IN STD_LOGIC;
		rx_st_mask0	: IN STD_LOGIC;
		rx_st_ready0	: IN STD_LOGIC;
		srst	: IN STD_LOGIC;
		test_in	: IN STD_LOGIC_VECTOR (39 DOWNTO 0);
		tx_st_data0	: IN STD_LOGIC_VECTOR (63 DOWNTO 0);
		tx_st_data0_p1	: IN STD_LOGIC_VECTOR (63 DOWNTO 0);
		tx_st_eop0	: IN STD_LOGIC;
		tx_st_eop0_p1	: IN STD_LOGIC;
		tx_st_err0	: IN STD_LOGIC;
		tx_st_sop0	: IN STD_LOGIC;
		tx_st_sop0_p1	: IN STD_LOGIC;
		tx_st_valid0	: IN STD_LOGIC;
		phystatus0_ext	: IN STD_LOGIC;
		rxdata0_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak0_ext	: IN STD_LOGIC;
		rxelecidle0_ext	: IN STD_LOGIC;
		rxstatus0_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid0_ext	: IN STD_LOGIC;
		phystatus1_ext	: IN STD_LOGIC;
		rxdata1_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak1_ext	: IN STD_LOGIC;
		rxelecidle1_ext	: IN STD_LOGIC;
		rxstatus1_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid1_ext	: IN STD_LOGIC;
		phystatus2_ext	: IN STD_LOGIC;
		rxdata2_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak2_ext	: IN STD_LOGIC;
		rxelecidle2_ext	: IN STD_LOGIC;
		rxstatus2_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid2_ext	: IN STD_LOGIC;
		phystatus3_ext	: IN STD_LOGIC;
		rxdata3_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak3_ext	: IN STD_LOGIC;
		rxelecidle3_ext	: IN STD_LOGIC;
		rxstatus3_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid3_ext	: IN STD_LOGIC;
		phystatus4_ext	: IN STD_LOGIC;
		rxdata4_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak4_ext	: IN STD_LOGIC;
		rxelecidle4_ext	: IN STD_LOGIC;
		rxstatus4_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid4_ext	: IN STD_LOGIC;
		phystatus5_ext	: IN STD_LOGIC;
		rxdata5_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak5_ext	: IN STD_LOGIC;
		rxelecidle5_ext	: IN STD_LOGIC;
		rxstatus5_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid5_ext	: IN STD_LOGIC;
		phystatus6_ext	: IN STD_LOGIC;
		rxdata6_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak6_ext	: IN STD_LOGIC;
		rxelecidle6_ext	: IN STD_LOGIC;
		rxstatus6_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid6_ext	: IN STD_LOGIC;
		phystatus7_ext	: IN STD_LOGIC;
		rxdata7_ext	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rxdatak7_ext	: IN STD_LOGIC;
		rxelecidle7_ext	: IN STD_LOGIC;
		rxstatus7_ext	: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
		rxvalid7_ext	: IN STD_LOGIC;
		CraIrq_o	: OUT STD_LOGIC;
		CraReadData_o	: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		CraWaitRequest_o	: OUT STD_LOGIC;
		RxmAddress_o	: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		RxmBurstCount_o	: OUT STD_LOGIC_VECTOR (9 DOWNTO 0);
		RxmByteEnable_o	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		RxmRead_o	: OUT STD_LOGIC;
		RxmWriteData_o	: OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
		RxmWrite_o	: OUT STD_LOGIC;
		TxsReadDataValid_o	: OUT STD_LOGIC;
		TxsReadData_o	: OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
		TxsWaitRequest_o	: OUT STD_LOGIC;
		app_int_ack	: OUT STD_LOGIC;
		app_msi_ack	: OUT STD_LOGIC;
		avs_pcie_reconfig_readdata	: OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
		avs_pcie_reconfig_readdatavalid	: OUT STD_LOGIC;
		avs_pcie_reconfig_waitrequest	: OUT STD_LOGIC;
		core_clk_out	: OUT STD_LOGIC;
		derr_cor_ext_rcv0	: OUT STD_LOGIC;
		derr_cor_ext_rpl	: OUT STD_LOGIC;
		derr_rpl	: OUT STD_LOGIC;
		dl_ltssm	: OUT STD_LOGIC_VECTOR (4 DOWNTO 0);
		dlup_exit	: OUT STD_LOGIC;
		eidle_infer_sel	: OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
		ev_128ns	: OUT STD_LOGIC;
		ev_1us	: OUT STD_LOGIC;
		hip_extraclkout	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		hotrst_exit	: OUT STD_LOGIC;
		int_status	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		l2_exit	: OUT STD_LOGIC;
		lane_act	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		lmi_ack	: OUT STD_LOGIC;
		lmi_dout	: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		npd_alloc_1cred_vc0	: OUT STD_LOGIC;
		npd_cred_vio_vc0	: OUT STD_LOGIC;
		nph_alloc_1cred_vc0	: OUT STD_LOGIC;
		nph_cred_vio_vc0	: OUT STD_LOGIC;
		pme_to_sr	: OUT STD_LOGIC;
		r2c_err0	: OUT STD_LOGIC;
		rate_ext	: OUT STD_LOGIC;
		rc_gxb_powerdown	: OUT STD_LOGIC;
		rc_rx_analogreset	: OUT STD_LOGIC;
		rc_rx_digitalreset	: OUT STD_LOGIC;
		rc_tx_digitalreset	: OUT STD_LOGIC;
		reset_status	: OUT STD_LOGIC;
		rx_fifo_empty0	: OUT STD_LOGIC;
		rx_fifo_full0	: OUT STD_LOGIC;
		rx_st_bardec0	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		rx_st_be0	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		rx_st_be0_p1	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		rx_st_data0	: OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
		rx_st_data0_p1	: OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
		rx_st_eop0	: OUT STD_LOGIC;
		rx_st_eop0_p1	: OUT STD_LOGIC;
		rx_st_err0	: OUT STD_LOGIC;
		rx_st_sop0	: OUT STD_LOGIC;
		rx_st_sop0_p1	: OUT STD_LOGIC;
		rx_st_valid0	: OUT STD_LOGIC;
		serr_out	: OUT STD_LOGIC;
		suc_spd_neg	: OUT STD_LOGIC;
		swdn_wake	: OUT STD_LOGIC;
		swup_hotrst	: OUT STD_LOGIC;
		test_out	: OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
		tl_cfg_add	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		tl_cfg_ctl	: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		tl_cfg_ctl_wr	: OUT STD_LOGIC;
		tl_cfg_sts	: OUT STD_LOGIC_VECTOR (52 DOWNTO 0);
		tl_cfg_sts_wr	: OUT STD_LOGIC;
		tx_cred0	: OUT STD_LOGIC_VECTOR (35 DOWNTO 0);
		tx_deemph	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		tx_fifo_empty0	: OUT STD_LOGIC;
		tx_fifo_full0	: OUT STD_LOGIC;
		tx_fifo_rdptr0	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		tx_fifo_wrptr0	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		tx_margin	: OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
		tx_st_ready0	: OUT STD_LOGIC;
		use_pcie_reconfig	: OUT STD_LOGIC;
		wake_oen	: OUT STD_LOGIC;
		powerdown0_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity0_ext	: OUT STD_LOGIC;
		txcompl0_ext	: OUT STD_LOGIC;
		txdata0_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak0_ext	: OUT STD_LOGIC;
		txdetectrx0_ext	: OUT STD_LOGIC;
		txelecidle0_ext	: OUT STD_LOGIC;
		powerdown1_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity1_ext	: OUT STD_LOGIC;
		txcompl1_ext	: OUT STD_LOGIC;
		txdata1_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak1_ext	: OUT STD_LOGIC;
		txdetectrx1_ext	: OUT STD_LOGIC;
		txelecidle1_ext	: OUT STD_LOGIC;
		powerdown2_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity2_ext	: OUT STD_LOGIC;
		txcompl2_ext	: OUT STD_LOGIC;
		txdata2_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak2_ext	: OUT STD_LOGIC;
		txdetectrx2_ext	: OUT STD_LOGIC;
		txelecidle2_ext	: OUT STD_LOGIC;
		powerdown3_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity3_ext	: OUT STD_LOGIC;
		txcompl3_ext	: OUT STD_LOGIC;
		txdata3_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak3_ext	: OUT STD_LOGIC;
		txdetectrx3_ext	: OUT STD_LOGIC;
		txelecidle3_ext	: OUT STD_LOGIC;
		powerdown4_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity4_ext	: OUT STD_LOGIC;
		txcompl4_ext	: OUT STD_LOGIC;
		txdata4_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak4_ext	: OUT STD_LOGIC;
		txdetectrx4_ext	: OUT STD_LOGIC;
		txelecidle4_ext	: OUT STD_LOGIC;
		powerdown5_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity5_ext	: OUT STD_LOGIC;
		txcompl5_ext	: OUT STD_LOGIC;
		txdata5_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak5_ext	: OUT STD_LOGIC;
		txdetectrx5_ext	: OUT STD_LOGIC;
		txelecidle5_ext	: OUT STD_LOGIC;
		powerdown6_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity6_ext	: OUT STD_LOGIC;
		txcompl6_ext	: OUT STD_LOGIC;
		txdata6_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak6_ext	: OUT STD_LOGIC;
		txdetectrx6_ext	: OUT STD_LOGIC;
		txelecidle6_ext	: OUT STD_LOGIC;
		powerdown7_ext	: OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
		rxpolarity7_ext	: OUT STD_LOGIC;
		txcompl7_ext	: OUT STD_LOGIC;
		txdata7_ext	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		txdatak7_ext	: OUT STD_LOGIC;
		txdetectrx7_ext	: OUT STD_LOGIC;
		txelecidle7_ext	: OUT STD_LOGIC
	);
end component;
