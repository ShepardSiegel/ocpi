//
// Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
//
// On Mon Apr 23 10:19:59 EDT 2012
//
//
// Ports:
// Name                         I/O  size props
// led                            O     5 reg
// debug                          O    16 reg
// sysRst                         O     1 reset
// sys0_clkp                      I     1 clock
// sys0_clkn                      I     1 clock
// fpga_rstn                      I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkFTop_n210(sys0_clkp,
		   sys0_clkn,
		   fpga_rstn,

		   led,

		   debug,

		   sysRst);
  input  sys0_clkp;
  input  sys0_clkn;
  input  fpga_rstn;

  // value method led
  output [4 : 0] led;

  // value method debug
  output [15 : 0] debug;

  // output resets
  output sysRst;

  // signals for module outputs
  wire [15 : 0] debug;
  wire [4 : 0] led;
  wire sysRst;

  // register freeCnt
  reg [31 : 0] freeCnt;
  wire [31 : 0] freeCnt$D_IN;
  wire freeCnt$EN;

  // ports of submodule sys0_clk
  wire sys0_clk$O;

  // ports of submodule sys0_rst
  wire sys0_rst$OUT_RST_N;

  // output resets
  assign sysRst = sys0_rst$OUT_RST_N ;

  // value method led
  assign led = freeCnt[31:27] ;

  // value method debug
  assign debug = freeCnt[15:0] ;

  // submodule sys0_clk
  IBUFDS sys0_clk(.I(sys0_clkp), .IB(sys0_clkn), .O(sys0_clk$O));

  // submodule sys0_rst
  SyncResetA #(.RSTDELAY(32'd1)) sys0_rst(.CLK(sys0_clk$O),
					  .IN_RST_N(fpga_rstn),
					  .OUT_RST_N(sys0_rst$OUT_RST_N));

  // register freeCnt
  assign freeCnt$D_IN = freeCnt + 32'd1 ;
  assign freeCnt$EN = 1'd1 ;

  // handling of inlined registers

  always@(posedge sys0_clk$O)
  begin
    if (!sys0_rst$OUT_RST_N)
      begin
        freeCnt <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (freeCnt$EN) freeCnt <= `BSV_ASSIGNMENT_DELAY freeCnt$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    freeCnt = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFTop_n210

