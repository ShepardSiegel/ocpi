//
// Generated by Bluespec Compiler, version 2012.09.beta1 (build 29570, 2012-09.11)
//
// On Fri Oct 12 15:01:06 EDT 2012
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTB19(CLK,
	      RST_N);
  input  CLK;
  input  RST_N;

  // register simCycle
  reg [15 : 0] simCycle;
  wire [15 : 0] simCycle$D_IN;
  wire simCycle$EN;

  // ports of submodule app
  wire [127 : 0] app$wmemiM0_SData;
  wire [63 : 0] app$wti_s_0_MData, app$wti_s_1_MData, app$wti_s_2_MData;
  wire [31 : 0] app$wci_s_0_MAddr,
		app$wci_s_0_MData,
		app$wci_s_0_SData,
		app$wci_s_1_MAddr,
		app$wci_s_1_MData,
		app$wci_s_1_SData,
		app$wci_s_2_MAddr,
		app$wci_s_2_MData,
		app$wci_s_2_SData,
		app$wci_s_3_MAddr,
		app$wci_s_3_MData,
		app$wci_s_3_SData,
		app$wci_s_4_MAddr,
		app$wci_s_4_MData,
		app$wci_s_4_SData,
		app$wci_s_5_MAddr,
		app$wci_s_5_MData,
		app$wci_s_5_SData,
		app$wci_s_6_MAddr,
		app$wci_s_6_MData,
		app$wci_s_6_SData,
		app$wci_s_7_MAddr,
		app$wci_s_7_MData,
		app$wci_s_7_SData,
		app$wmiM0_SData,
		app$wmiM0_SFlag,
		app$wmiM1_SData,
		app$wmiM1_SFlag,
		app$wsi_s_adc_MData;
  wire [11 : 0] app$wsi_s_adc_MBurstLength;
  wire [7 : 0] app$wsi_s_adc_MReqInfo;
  wire [3 : 0] app$wci_s_0_MByteEn,
	       app$wci_s_1_MByteEn,
	       app$wci_s_2_MByteEn,
	       app$wci_s_3_MByteEn,
	       app$wci_s_4_MByteEn,
	       app$wci_s_5_MByteEn,
	       app$wci_s_6_MByteEn,
	       app$wci_s_7_MByteEn,
	       app$wsi_s_adc_MByteEn;
  wire [2 : 0] app$wci_s_0_MCmd,
	       app$wci_s_1_MCmd,
	       app$wci_s_2_MCmd,
	       app$wci_s_3_MCmd,
	       app$wci_s_4_MCmd,
	       app$wci_s_5_MCmd,
	       app$wci_s_6_MCmd,
	       app$wci_s_7_MCmd,
	       app$wsi_s_adc_MCmd,
	       app$wti_s_0_MCmd,
	       app$wti_s_1_MCmd,
	       app$wti_s_2_MCmd;
  wire [1 : 0] app$wci_s_0_MFlag,
	       app$wci_s_0_SFlag,
	       app$wci_s_0_SResp,
	       app$wci_s_1_MFlag,
	       app$wci_s_1_SFlag,
	       app$wci_s_1_SResp,
	       app$wci_s_2_MFlag,
	       app$wci_s_2_SFlag,
	       app$wci_s_2_SResp,
	       app$wci_s_3_MFlag,
	       app$wci_s_3_SFlag,
	       app$wci_s_3_SResp,
	       app$wci_s_4_MFlag,
	       app$wci_s_4_SFlag,
	       app$wci_s_4_SResp,
	       app$wci_s_5_MFlag,
	       app$wci_s_5_SFlag,
	       app$wci_s_5_SResp,
	       app$wci_s_6_MFlag,
	       app$wci_s_6_SFlag,
	       app$wci_s_6_SResp,
	       app$wci_s_7_MFlag,
	       app$wci_s_7_SFlag,
	       app$wci_s_7_SResp,
	       app$wmemiM0_SResp,
	       app$wmiM0_SResp,
	       app$wmiM1_SResp;
  wire app$wci_s_0_MAddrSpace,
       app$wci_s_0_SThreadBusy,
       app$wci_s_1_MAddrSpace,
       app$wci_s_1_SThreadBusy,
       app$wci_s_2_MAddrSpace,
       app$wci_s_2_SThreadBusy,
       app$wci_s_3_MAddrSpace,
       app$wci_s_3_SThreadBusy,
       app$wci_s_4_MAddrSpace,
       app$wci_s_4_SThreadBusy,
       app$wci_s_5_MAddrSpace,
       app$wci_s_5_SThreadBusy,
       app$wci_s_6_MAddrSpace,
       app$wci_s_6_SThreadBusy,
       app$wci_s_7_MAddrSpace,
       app$wci_s_7_SThreadBusy,
       app$wmemiM0_SCmdAccept,
       app$wmemiM0_SDataAccept,
       app$wmemiM0_SRespLast,
       app$wmiM0_SDataThreadBusy,
       app$wmiM0_SReset_n,
       app$wmiM0_SRespLast,
       app$wmiM0_SThreadBusy,
       app$wmiM1_SDataThreadBusy,
       app$wmiM1_SReset_n,
       app$wmiM1_SRespLast,
       app$wmiM1_SThreadBusy,
       app$wsi_m_dac_SReset_n,
       app$wsi_m_dac_SThreadBusy,
       app$wsi_s_adc_MBurstPrecise,
       app$wsi_s_adc_MReqLast,
       app$wsi_s_adc_MReset_n;

  // ports of submodule cp
  wire [511 : 0] cp$uuid_arg;
  wire [58 : 0] cp$server_request_put;
  wire [39 : 0] cp$server_response_get;
  wire [31 : 0] cp$wci_Vm_0_MAddr,
		cp$wci_Vm_0_MData,
		cp$wci_Vm_0_SData,
		cp$wci_Vm_10_SData,
		cp$wci_Vm_11_SData,
		cp$wci_Vm_12_SData,
		cp$wci_Vm_13_SData,
		cp$wci_Vm_14_SData,
		cp$wci_Vm_1_MAddr,
		cp$wci_Vm_1_MData,
		cp$wci_Vm_1_SData,
		cp$wci_Vm_2_MAddr,
		cp$wci_Vm_2_MData,
		cp$wci_Vm_2_SData,
		cp$wci_Vm_3_MAddr,
		cp$wci_Vm_3_MData,
		cp$wci_Vm_3_SData,
		cp$wci_Vm_4_MAddr,
		cp$wci_Vm_4_MData,
		cp$wci_Vm_4_SData,
		cp$wci_Vm_5_MAddr,
		cp$wci_Vm_5_MData,
		cp$wci_Vm_5_SData,
		cp$wci_Vm_6_MAddr,
		cp$wci_Vm_6_MData,
		cp$wci_Vm_6_SData,
		cp$wci_Vm_7_MAddr,
		cp$wci_Vm_7_MData,
		cp$wci_Vm_7_SData,
		cp$wci_Vm_8_SData,
		cp$wci_Vm_9_SData;
  wire [3 : 0] cp$wci_Vm_0_MByteEn,
	       cp$wci_Vm_1_MByteEn,
	       cp$wci_Vm_2_MByteEn,
	       cp$wci_Vm_3_MByteEn,
	       cp$wci_Vm_4_MByteEn,
	       cp$wci_Vm_5_MByteEn,
	       cp$wci_Vm_6_MByteEn,
	       cp$wci_Vm_7_MByteEn;
  wire [2 : 0] cp$switch_x,
	       cp$wci_Vm_0_MCmd,
	       cp$wci_Vm_1_MCmd,
	       cp$wci_Vm_2_MCmd,
	       cp$wci_Vm_3_MCmd,
	       cp$wci_Vm_4_MCmd,
	       cp$wci_Vm_5_MCmd,
	       cp$wci_Vm_6_MCmd,
	       cp$wci_Vm_7_MCmd;
  wire [1 : 0] cp$wci_Vm_0_MFlag,
	       cp$wci_Vm_0_SFlag,
	       cp$wci_Vm_0_SResp,
	       cp$wci_Vm_10_SFlag,
	       cp$wci_Vm_10_SResp,
	       cp$wci_Vm_11_SFlag,
	       cp$wci_Vm_11_SResp,
	       cp$wci_Vm_12_SFlag,
	       cp$wci_Vm_12_SResp,
	       cp$wci_Vm_13_SFlag,
	       cp$wci_Vm_13_SResp,
	       cp$wci_Vm_14_SFlag,
	       cp$wci_Vm_14_SResp,
	       cp$wci_Vm_1_MFlag,
	       cp$wci_Vm_1_SFlag,
	       cp$wci_Vm_1_SResp,
	       cp$wci_Vm_2_MFlag,
	       cp$wci_Vm_2_SFlag,
	       cp$wci_Vm_2_SResp,
	       cp$wci_Vm_3_MFlag,
	       cp$wci_Vm_3_SFlag,
	       cp$wci_Vm_3_SResp,
	       cp$wci_Vm_4_MFlag,
	       cp$wci_Vm_4_SFlag,
	       cp$wci_Vm_4_SResp,
	       cp$wci_Vm_5_MFlag,
	       cp$wci_Vm_5_SFlag,
	       cp$wci_Vm_5_SResp,
	       cp$wci_Vm_6_MFlag,
	       cp$wci_Vm_6_SFlag,
	       cp$wci_Vm_6_SResp,
	       cp$wci_Vm_7_MFlag,
	       cp$wci_Vm_7_SFlag,
	       cp$wci_Vm_7_SResp,
	       cp$wci_Vm_8_SFlag,
	       cp$wci_Vm_8_SResp,
	       cp$wci_Vm_9_SFlag,
	       cp$wci_Vm_9_SResp;
  wire cp$EN_server_request_put,
       cp$EN_server_response_get,
       cp$RDY_server_request_put,
       cp$RDY_server_response_get,
       cp$RST_N_wci_Vm_0,
       cp$RST_N_wci_Vm_1,
       cp$RST_N_wci_Vm_2,
       cp$RST_N_wci_Vm_3,
       cp$RST_N_wci_Vm_4,
       cp$RST_N_wci_Vm_5,
       cp$RST_N_wci_Vm_6,
       cp$RST_N_wci_Vm_7,
       cp$gps_ppsSyncIn_x,
       cp$wci_Vm_0_MAddrSpace,
       cp$wci_Vm_0_SThreadBusy,
       cp$wci_Vm_10_SThreadBusy,
       cp$wci_Vm_11_SThreadBusy,
       cp$wci_Vm_12_SThreadBusy,
       cp$wci_Vm_13_SThreadBusy,
       cp$wci_Vm_14_SThreadBusy,
       cp$wci_Vm_1_MAddrSpace,
       cp$wci_Vm_1_SThreadBusy,
       cp$wci_Vm_2_MAddrSpace,
       cp$wci_Vm_2_SThreadBusy,
       cp$wci_Vm_3_MAddrSpace,
       cp$wci_Vm_3_SThreadBusy,
       cp$wci_Vm_4_MAddrSpace,
       cp$wci_Vm_4_SThreadBusy,
       cp$wci_Vm_5_MAddrSpace,
       cp$wci_Vm_5_SThreadBusy,
       cp$wci_Vm_6_MAddrSpace,
       cp$wci_Vm_6_SThreadBusy,
       cp$wci_Vm_7_MAddrSpace,
       cp$wci_Vm_7_SThreadBusy,
       cp$wci_Vm_8_SThreadBusy,
       cp$wci_Vm_9_SThreadBusy;

  // ports of submodule simDCP
  wire [58 : 0] simDCP$client_request_get;
  wire [39 : 0] simDCP$client_response_put;
  wire [7 : 0] simDCP$host_request_put, simDCP$host_response_get;
  wire simDCP$EN_client_request_get,
       simDCP$EN_client_response_put,
       simDCP$EN_host_request_put,
       simDCP$EN_host_response_get,
       simDCP$RDY_client_request_get,
       simDCP$RDY_client_response_put,
       simDCP$RDY_host_request_put,
       simDCP$RDY_host_response_get;

  // ports of submodule simIO
  wire [7 : 0] simIO$host_request_get, simIO$host_response_put;
  wire simIO$EN_host_request_get,
       simIO$EN_host_response_put,
       simIO$RDY_host_request_get,
       simIO$RDY_host_response_put;

  // submodule app
  mkOCApp4B #(.hasDebugLogic(1'd1)) app(.RST_N_rst_0(cp$RST_N_wci_Vm_0),
					.RST_N_rst_1(cp$RST_N_wci_Vm_1),
					.RST_N_rst_2(cp$RST_N_wci_Vm_2),
					.RST_N_rst_3(cp$RST_N_wci_Vm_3),
					.RST_N_rst_4(cp$RST_N_wci_Vm_4),
					.RST_N_rst_5(cp$RST_N_wci_Vm_5),
					.RST_N_rst_6(cp$RST_N_wci_Vm_6),
					.RST_N_rst_7(cp$RST_N_wci_Vm_7),
					.CLK(CLK),
					.RST_N(RST_N),
					.wci_s_0_MAddr(app$wci_s_0_MAddr),
					.wci_s_0_MAddrSpace(app$wci_s_0_MAddrSpace),
					.wci_s_0_MByteEn(app$wci_s_0_MByteEn),
					.wci_s_0_MCmd(app$wci_s_0_MCmd),
					.wci_s_0_MData(app$wci_s_0_MData),
					.wci_s_0_MFlag(app$wci_s_0_MFlag),
					.wci_s_1_MAddr(app$wci_s_1_MAddr),
					.wci_s_1_MAddrSpace(app$wci_s_1_MAddrSpace),
					.wci_s_1_MByteEn(app$wci_s_1_MByteEn),
					.wci_s_1_MCmd(app$wci_s_1_MCmd),
					.wci_s_1_MData(app$wci_s_1_MData),
					.wci_s_1_MFlag(app$wci_s_1_MFlag),
					.wci_s_2_MAddr(app$wci_s_2_MAddr),
					.wci_s_2_MAddrSpace(app$wci_s_2_MAddrSpace),
					.wci_s_2_MByteEn(app$wci_s_2_MByteEn),
					.wci_s_2_MCmd(app$wci_s_2_MCmd),
					.wci_s_2_MData(app$wci_s_2_MData),
					.wci_s_2_MFlag(app$wci_s_2_MFlag),
					.wci_s_3_MAddr(app$wci_s_3_MAddr),
					.wci_s_3_MAddrSpace(app$wci_s_3_MAddrSpace),
					.wci_s_3_MByteEn(app$wci_s_3_MByteEn),
					.wci_s_3_MCmd(app$wci_s_3_MCmd),
					.wci_s_3_MData(app$wci_s_3_MData),
					.wci_s_3_MFlag(app$wci_s_3_MFlag),
					.wci_s_4_MAddr(app$wci_s_4_MAddr),
					.wci_s_4_MAddrSpace(app$wci_s_4_MAddrSpace),
					.wci_s_4_MByteEn(app$wci_s_4_MByteEn),
					.wci_s_4_MCmd(app$wci_s_4_MCmd),
					.wci_s_4_MData(app$wci_s_4_MData),
					.wci_s_4_MFlag(app$wci_s_4_MFlag),
					.wci_s_5_MAddr(app$wci_s_5_MAddr),
					.wci_s_5_MAddrSpace(app$wci_s_5_MAddrSpace),
					.wci_s_5_MByteEn(app$wci_s_5_MByteEn),
					.wci_s_5_MCmd(app$wci_s_5_MCmd),
					.wci_s_5_MData(app$wci_s_5_MData),
					.wci_s_5_MFlag(app$wci_s_5_MFlag),
					.wci_s_6_MAddr(app$wci_s_6_MAddr),
					.wci_s_6_MAddrSpace(app$wci_s_6_MAddrSpace),
					.wci_s_6_MByteEn(app$wci_s_6_MByteEn),
					.wci_s_6_MCmd(app$wci_s_6_MCmd),
					.wci_s_6_MData(app$wci_s_6_MData),
					.wci_s_6_MFlag(app$wci_s_6_MFlag),
					.wci_s_7_MAddr(app$wci_s_7_MAddr),
					.wci_s_7_MAddrSpace(app$wci_s_7_MAddrSpace),
					.wci_s_7_MByteEn(app$wci_s_7_MByteEn),
					.wci_s_7_MCmd(app$wci_s_7_MCmd),
					.wci_s_7_MData(app$wci_s_7_MData),
					.wci_s_7_MFlag(app$wci_s_7_MFlag),
					.wmemiM0_SData(app$wmemiM0_SData),
					.wmemiM0_SResp(app$wmemiM0_SResp),
					.wmiM0_SData(app$wmiM0_SData),
					.wmiM0_SFlag(app$wmiM0_SFlag),
					.wmiM0_SResp(app$wmiM0_SResp),
					.wmiM1_SData(app$wmiM1_SData),
					.wmiM1_SFlag(app$wmiM1_SFlag),
					.wmiM1_SResp(app$wmiM1_SResp),
					.wsi_s_adc_MBurstLength(app$wsi_s_adc_MBurstLength),
					.wsi_s_adc_MByteEn(app$wsi_s_adc_MByteEn),
					.wsi_s_adc_MCmd(app$wsi_s_adc_MCmd),
					.wsi_s_adc_MData(app$wsi_s_adc_MData),
					.wsi_s_adc_MReqInfo(app$wsi_s_adc_MReqInfo),
					.wti_s_0_MCmd(app$wti_s_0_MCmd),
					.wti_s_0_MData(app$wti_s_0_MData),
					.wti_s_1_MCmd(app$wti_s_1_MCmd),
					.wti_s_1_MData(app$wti_s_1_MData),
					.wti_s_2_MCmd(app$wti_s_2_MCmd),
					.wti_s_2_MData(app$wti_s_2_MData),
					.wmiM0_SThreadBusy(app$wmiM0_SThreadBusy),
					.wmiM0_SDataThreadBusy(app$wmiM0_SDataThreadBusy),
					.wmiM0_SRespLast(app$wmiM0_SRespLast),
					.wmiM0_SReset_n(app$wmiM0_SReset_n),
					.wmiM1_SThreadBusy(app$wmiM1_SThreadBusy),
					.wmiM1_SDataThreadBusy(app$wmiM1_SDataThreadBusy),
					.wmiM1_SRespLast(app$wmiM1_SRespLast),
					.wmiM1_SReset_n(app$wmiM1_SReset_n),
					.wmemiM0_SRespLast(app$wmemiM0_SRespLast),
					.wmemiM0_SCmdAccept(app$wmemiM0_SCmdAccept),
					.wmemiM0_SDataAccept(app$wmemiM0_SDataAccept),
					.wsi_s_adc_MReqLast(app$wsi_s_adc_MReqLast),
					.wsi_s_adc_MBurstPrecise(app$wsi_s_adc_MBurstPrecise),
					.wsi_s_adc_MReset_n(app$wsi_s_adc_MReset_n),
					.wsi_m_dac_SThreadBusy(app$wsi_m_dac_SThreadBusy),
					.wsi_m_dac_SReset_n(app$wsi_m_dac_SReset_n),
					.wci_s_0_SResp(app$wci_s_0_SResp),
					.wci_s_0_SData(app$wci_s_0_SData),
					.wci_s_0_SThreadBusy(app$wci_s_0_SThreadBusy),
					.wci_s_0_SFlag(app$wci_s_0_SFlag),
					.wci_s_1_SResp(app$wci_s_1_SResp),
					.wci_s_1_SData(app$wci_s_1_SData),
					.wci_s_1_SThreadBusy(app$wci_s_1_SThreadBusy),
					.wci_s_1_SFlag(app$wci_s_1_SFlag),
					.wci_s_2_SResp(app$wci_s_2_SResp),
					.wci_s_2_SData(app$wci_s_2_SData),
					.wci_s_2_SThreadBusy(app$wci_s_2_SThreadBusy),
					.wci_s_2_SFlag(app$wci_s_2_SFlag),
					.wci_s_3_SResp(app$wci_s_3_SResp),
					.wci_s_3_SData(app$wci_s_3_SData),
					.wci_s_3_SThreadBusy(app$wci_s_3_SThreadBusy),
					.wci_s_3_SFlag(app$wci_s_3_SFlag),
					.wci_s_4_SResp(app$wci_s_4_SResp),
					.wci_s_4_SData(app$wci_s_4_SData),
					.wci_s_4_SThreadBusy(app$wci_s_4_SThreadBusy),
					.wci_s_4_SFlag(app$wci_s_4_SFlag),
					.wci_s_5_SResp(app$wci_s_5_SResp),
					.wci_s_5_SData(app$wci_s_5_SData),
					.wci_s_5_SThreadBusy(app$wci_s_5_SThreadBusy),
					.wci_s_5_SFlag(app$wci_s_5_SFlag),
					.wci_s_6_SResp(app$wci_s_6_SResp),
					.wci_s_6_SData(app$wci_s_6_SData),
					.wci_s_6_SThreadBusy(app$wci_s_6_SThreadBusy),
					.wci_s_6_SFlag(app$wci_s_6_SFlag),
					.wci_s_7_SResp(app$wci_s_7_SResp),
					.wci_s_7_SData(app$wci_s_7_SData),
					.wci_s_7_SThreadBusy(app$wci_s_7_SThreadBusy),
					.wci_s_7_SFlag(app$wci_s_7_SFlag),
					.wti_s_0_SThreadBusy(),
					.wti_s_0_SReset_n(),
					.wti_s_1_SThreadBusy(),
					.wti_s_1_SReset_n(),
					.wti_s_2_SThreadBusy(),
					.wti_s_2_SReset_n(),
					.wmiM0_MCmd(),
					.wmiM0_MReqLast(),
					.wmiM0_MReqInfo(),
					.wmiM0_MAddrSpace(),
					.wmiM0_MAddr(),
					.wmiM0_MBurstLength(),
					.wmiM0_MDataValid(),
					.wmiM0_MDataLast(),
					.wmiM0_MData(),
					.wmiM0_MDataByteEn(),
					.wmiM0_MFlag(),
					.wmiM0_MReset_n(),
					.wmiM1_MCmd(),
					.wmiM1_MReqLast(),
					.wmiM1_MReqInfo(),
					.wmiM1_MAddrSpace(),
					.wmiM1_MAddr(),
					.wmiM1_MBurstLength(),
					.wmiM1_MDataValid(),
					.wmiM1_MDataLast(),
					.wmiM1_MData(),
					.wmiM1_MDataByteEn(),
					.wmiM1_MFlag(),
					.wmiM1_MReset_n(),
					.wmemiM0_MCmd(),
					.wmemiM0_MReqLast(),
					.wmemiM0_MAddr(),
					.wmemiM0_MBurstLength(),
					.wmemiM0_MDataValid(),
					.wmemiM0_MDataLast(),
					.wmemiM0_MData(),
					.wmemiM0_MDataByteEn(),
					.wmemiM0_MReset_n(),
					.wsi_s_adc_SThreadBusy(),
					.wsi_s_adc_SReset_n(),
					.wsi_m_dac_MCmd(),
					.wsi_m_dac_MReqLast(),
					.wsi_m_dac_MBurstPrecise(),
					.wsi_m_dac_MBurstLength(),
					.wsi_m_dac_MData(),
					.wsi_m_dac_MByteEn(),
					.wsi_m_dac_MReqInfo(),
					.wsi_m_dac_MReset_n(),
					.uuid());

  // submodule cp
  mkOCCP cp(.pciDevice(16'hAAAA),
	    .CLK_time_clk(CLK),
	    .RST_N_time_rst(RST_N),
	    .CLK(CLK),
	    .RST_N(RST_N),
	    .gps_ppsSyncIn_x(cp$gps_ppsSyncIn_x),
	    .server_request_put(cp$server_request_put),
	    .switch_x(cp$switch_x),
	    .uuid_arg(cp$uuid_arg),
	    .wci_Vm_0_SData(cp$wci_Vm_0_SData),
	    .wci_Vm_0_SFlag(cp$wci_Vm_0_SFlag),
	    .wci_Vm_0_SResp(cp$wci_Vm_0_SResp),
	    .wci_Vm_10_SData(cp$wci_Vm_10_SData),
	    .wci_Vm_10_SFlag(cp$wci_Vm_10_SFlag),
	    .wci_Vm_10_SResp(cp$wci_Vm_10_SResp),
	    .wci_Vm_11_SData(cp$wci_Vm_11_SData),
	    .wci_Vm_11_SFlag(cp$wci_Vm_11_SFlag),
	    .wci_Vm_11_SResp(cp$wci_Vm_11_SResp),
	    .wci_Vm_12_SData(cp$wci_Vm_12_SData),
	    .wci_Vm_12_SFlag(cp$wci_Vm_12_SFlag),
	    .wci_Vm_12_SResp(cp$wci_Vm_12_SResp),
	    .wci_Vm_13_SData(cp$wci_Vm_13_SData),
	    .wci_Vm_13_SFlag(cp$wci_Vm_13_SFlag),
	    .wci_Vm_13_SResp(cp$wci_Vm_13_SResp),
	    .wci_Vm_14_SData(cp$wci_Vm_14_SData),
	    .wci_Vm_14_SFlag(cp$wci_Vm_14_SFlag),
	    .wci_Vm_14_SResp(cp$wci_Vm_14_SResp),
	    .wci_Vm_1_SData(cp$wci_Vm_1_SData),
	    .wci_Vm_1_SFlag(cp$wci_Vm_1_SFlag),
	    .wci_Vm_1_SResp(cp$wci_Vm_1_SResp),
	    .wci_Vm_2_SData(cp$wci_Vm_2_SData),
	    .wci_Vm_2_SFlag(cp$wci_Vm_2_SFlag),
	    .wci_Vm_2_SResp(cp$wci_Vm_2_SResp),
	    .wci_Vm_3_SData(cp$wci_Vm_3_SData),
	    .wci_Vm_3_SFlag(cp$wci_Vm_3_SFlag),
	    .wci_Vm_3_SResp(cp$wci_Vm_3_SResp),
	    .wci_Vm_4_SData(cp$wci_Vm_4_SData),
	    .wci_Vm_4_SFlag(cp$wci_Vm_4_SFlag),
	    .wci_Vm_4_SResp(cp$wci_Vm_4_SResp),
	    .wci_Vm_5_SData(cp$wci_Vm_5_SData),
	    .wci_Vm_5_SFlag(cp$wci_Vm_5_SFlag),
	    .wci_Vm_5_SResp(cp$wci_Vm_5_SResp),
	    .wci_Vm_6_SData(cp$wci_Vm_6_SData),
	    .wci_Vm_6_SFlag(cp$wci_Vm_6_SFlag),
	    .wci_Vm_6_SResp(cp$wci_Vm_6_SResp),
	    .wci_Vm_7_SData(cp$wci_Vm_7_SData),
	    .wci_Vm_7_SFlag(cp$wci_Vm_7_SFlag),
	    .wci_Vm_7_SResp(cp$wci_Vm_7_SResp),
	    .wci_Vm_8_SData(cp$wci_Vm_8_SData),
	    .wci_Vm_8_SFlag(cp$wci_Vm_8_SFlag),
	    .wci_Vm_8_SResp(cp$wci_Vm_8_SResp),
	    .wci_Vm_9_SData(cp$wci_Vm_9_SData),
	    .wci_Vm_9_SFlag(cp$wci_Vm_9_SFlag),
	    .wci_Vm_9_SResp(cp$wci_Vm_9_SResp),
	    .EN_server_request_put(cp$EN_server_request_put),
	    .EN_server_response_get(cp$EN_server_response_get),
	    .wci_Vm_0_SThreadBusy(cp$wci_Vm_0_SThreadBusy),
	    .wci_Vm_1_SThreadBusy(cp$wci_Vm_1_SThreadBusy),
	    .wci_Vm_2_SThreadBusy(cp$wci_Vm_2_SThreadBusy),
	    .wci_Vm_3_SThreadBusy(cp$wci_Vm_3_SThreadBusy),
	    .wci_Vm_4_SThreadBusy(cp$wci_Vm_4_SThreadBusy),
	    .wci_Vm_5_SThreadBusy(cp$wci_Vm_5_SThreadBusy),
	    .wci_Vm_6_SThreadBusy(cp$wci_Vm_6_SThreadBusy),
	    .wci_Vm_7_SThreadBusy(cp$wci_Vm_7_SThreadBusy),
	    .wci_Vm_8_SThreadBusy(cp$wci_Vm_8_SThreadBusy),
	    .wci_Vm_9_SThreadBusy(cp$wci_Vm_9_SThreadBusy),
	    .wci_Vm_10_SThreadBusy(cp$wci_Vm_10_SThreadBusy),
	    .wci_Vm_11_SThreadBusy(cp$wci_Vm_11_SThreadBusy),
	    .wci_Vm_12_SThreadBusy(cp$wci_Vm_12_SThreadBusy),
	    .wci_Vm_13_SThreadBusy(cp$wci_Vm_13_SThreadBusy),
	    .wci_Vm_14_SThreadBusy(cp$wci_Vm_14_SThreadBusy),
	    .RDY_server_request_put(cp$RDY_server_request_put),
	    .server_response_get(cp$server_response_get),
	    .RDY_server_response_get(cp$RDY_server_response_get),
	    .wci_Vm_0_MCmd(cp$wci_Vm_0_MCmd),
	    .wci_Vm_0_MAddrSpace(cp$wci_Vm_0_MAddrSpace),
	    .wci_Vm_0_MByteEn(cp$wci_Vm_0_MByteEn),
	    .wci_Vm_0_MAddr(cp$wci_Vm_0_MAddr),
	    .wci_Vm_0_MData(cp$wci_Vm_0_MData),
	    .wci_Vm_0_MFlag(cp$wci_Vm_0_MFlag),
	    .wci_Vm_1_MCmd(cp$wci_Vm_1_MCmd),
	    .wci_Vm_1_MAddrSpace(cp$wci_Vm_1_MAddrSpace),
	    .wci_Vm_1_MByteEn(cp$wci_Vm_1_MByteEn),
	    .wci_Vm_1_MAddr(cp$wci_Vm_1_MAddr),
	    .wci_Vm_1_MData(cp$wci_Vm_1_MData),
	    .wci_Vm_1_MFlag(cp$wci_Vm_1_MFlag),
	    .wci_Vm_2_MCmd(cp$wci_Vm_2_MCmd),
	    .wci_Vm_2_MAddrSpace(cp$wci_Vm_2_MAddrSpace),
	    .wci_Vm_2_MByteEn(cp$wci_Vm_2_MByteEn),
	    .wci_Vm_2_MAddr(cp$wci_Vm_2_MAddr),
	    .wci_Vm_2_MData(cp$wci_Vm_2_MData),
	    .wci_Vm_2_MFlag(cp$wci_Vm_2_MFlag),
	    .wci_Vm_3_MCmd(cp$wci_Vm_3_MCmd),
	    .wci_Vm_3_MAddrSpace(cp$wci_Vm_3_MAddrSpace),
	    .wci_Vm_3_MByteEn(cp$wci_Vm_3_MByteEn),
	    .wci_Vm_3_MAddr(cp$wci_Vm_3_MAddr),
	    .wci_Vm_3_MData(cp$wci_Vm_3_MData),
	    .wci_Vm_3_MFlag(cp$wci_Vm_3_MFlag),
	    .wci_Vm_4_MCmd(cp$wci_Vm_4_MCmd),
	    .wci_Vm_4_MAddrSpace(cp$wci_Vm_4_MAddrSpace),
	    .wci_Vm_4_MByteEn(cp$wci_Vm_4_MByteEn),
	    .wci_Vm_4_MAddr(cp$wci_Vm_4_MAddr),
	    .wci_Vm_4_MData(cp$wci_Vm_4_MData),
	    .wci_Vm_4_MFlag(cp$wci_Vm_4_MFlag),
	    .wci_Vm_5_MCmd(cp$wci_Vm_5_MCmd),
	    .wci_Vm_5_MAddrSpace(cp$wci_Vm_5_MAddrSpace),
	    .wci_Vm_5_MByteEn(cp$wci_Vm_5_MByteEn),
	    .wci_Vm_5_MAddr(cp$wci_Vm_5_MAddr),
	    .wci_Vm_5_MData(cp$wci_Vm_5_MData),
	    .wci_Vm_5_MFlag(cp$wci_Vm_5_MFlag),
	    .wci_Vm_6_MCmd(cp$wci_Vm_6_MCmd),
	    .wci_Vm_6_MAddrSpace(cp$wci_Vm_6_MAddrSpace),
	    .wci_Vm_6_MByteEn(cp$wci_Vm_6_MByteEn),
	    .wci_Vm_6_MAddr(cp$wci_Vm_6_MAddr),
	    .wci_Vm_6_MData(cp$wci_Vm_6_MData),
	    .wci_Vm_6_MFlag(cp$wci_Vm_6_MFlag),
	    .wci_Vm_7_MCmd(cp$wci_Vm_7_MCmd),
	    .wci_Vm_7_MAddrSpace(cp$wci_Vm_7_MAddrSpace),
	    .wci_Vm_7_MByteEn(cp$wci_Vm_7_MByteEn),
	    .wci_Vm_7_MAddr(cp$wci_Vm_7_MAddr),
	    .wci_Vm_7_MData(cp$wci_Vm_7_MData),
	    .wci_Vm_7_MFlag(cp$wci_Vm_7_MFlag),
	    .wci_Vm_8_MCmd(),
	    .wci_Vm_8_MAddrSpace(),
	    .wci_Vm_8_MByteEn(),
	    .wci_Vm_8_MAddr(),
	    .wci_Vm_8_MData(),
	    .wci_Vm_8_MFlag(),
	    .wci_Vm_9_MCmd(),
	    .wci_Vm_9_MAddrSpace(),
	    .wci_Vm_9_MByteEn(),
	    .wci_Vm_9_MAddr(),
	    .wci_Vm_9_MData(),
	    .wci_Vm_9_MFlag(),
	    .wci_Vm_10_MCmd(),
	    .wci_Vm_10_MAddrSpace(),
	    .wci_Vm_10_MByteEn(),
	    .wci_Vm_10_MAddr(),
	    .wci_Vm_10_MData(),
	    .wci_Vm_10_MFlag(),
	    .wci_Vm_11_MCmd(),
	    .wci_Vm_11_MAddrSpace(),
	    .wci_Vm_11_MByteEn(),
	    .wci_Vm_11_MAddr(),
	    .wci_Vm_11_MData(),
	    .wci_Vm_11_MFlag(),
	    .wci_Vm_12_MCmd(),
	    .wci_Vm_12_MAddrSpace(),
	    .wci_Vm_12_MByteEn(),
	    .wci_Vm_12_MAddr(),
	    .wci_Vm_12_MData(),
	    .wci_Vm_12_MFlag(),
	    .wci_Vm_13_MCmd(),
	    .wci_Vm_13_MAddrSpace(),
	    .wci_Vm_13_MByteEn(),
	    .wci_Vm_13_MAddr(),
	    .wci_Vm_13_MData(),
	    .wci_Vm_13_MFlag(),
	    .wci_Vm_14_MCmd(),
	    .wci_Vm_14_MAddrSpace(),
	    .wci_Vm_14_MByteEn(),
	    .wci_Vm_14_MAddr(),
	    .wci_Vm_14_MData(),
	    .wci_Vm_14_MFlag(),
	    .cpNow(),
	    .RDY_cpNow(),
	    .gps_ppsSyncOut(),
	    .led(),
	    .RST_N_wci_Vm_0(cp$RST_N_wci_Vm_0),
	    .RST_N_wci_Vm_1(cp$RST_N_wci_Vm_1),
	    .RST_N_wci_Vm_2(cp$RST_N_wci_Vm_2),
	    .RST_N_wci_Vm_3(cp$RST_N_wci_Vm_3),
	    .RST_N_wci_Vm_4(cp$RST_N_wci_Vm_4),
	    .RST_N_wci_Vm_5(cp$RST_N_wci_Vm_5),
	    .RST_N_wci_Vm_6(cp$RST_N_wci_Vm_6),
	    .RST_N_wci_Vm_7(cp$RST_N_wci_Vm_7),
	    .RST_N_wci_Vm_8(),
	    .RST_N_wci_Vm_9(),
	    .RST_N_wci_Vm_10(),
	    .RST_N_wci_Vm_11(),
	    .RST_N_wci_Vm_12(),
	    .RST_N_wci_Vm_13(),
	    .RST_N_wci_Vm_14());

  // submodule simDCP
  mkSimDCP simDCP(.CLK(CLK),
		  .RST_N(RST_N),
		  .client_response_put(simDCP$client_response_put),
		  .host_request_put(simDCP$host_request_put),
		  .EN_host_request_put(simDCP$EN_host_request_put),
		  .EN_host_response_get(simDCP$EN_host_response_get),
		  .EN_client_request_get(simDCP$EN_client_request_get),
		  .EN_client_response_put(simDCP$EN_client_response_put),
		  .RDY_host_request_put(simDCP$RDY_host_request_put),
		  .host_response_get(simDCP$host_response_get),
		  .RDY_host_response_get(simDCP$RDY_host_response_get),
		  .client_request_get(simDCP$client_request_get),
		  .RDY_client_request_get(simDCP$RDY_client_request_get),
		  .RDY_client_response_put(simDCP$RDY_client_response_put));

  // submodule simIO
  mkSimIO simIO(.CLK(CLK),
		.RST_N(RST_N),
		.host_response_put(simIO$host_response_put),
		.EN_host_request_get(simIO$EN_host_request_get),
		.EN_host_response_put(simIO$EN_host_response_put),
		.host_request_get(simIO$host_request_get),
		.RDY_host_request_get(simIO$RDY_host_request_get),
		.RDY_host_response_put(simIO$RDY_host_response_put));

  // register simCycle
  assign simCycle$D_IN = simCycle + 16'd1 ;
  assign simCycle$EN = 1'd1 ;

  // submodule app
  assign app$wci_s_0_MAddr = cp$wci_Vm_0_MAddr ;
  assign app$wci_s_0_MAddrSpace = cp$wci_Vm_0_MAddrSpace ;
  assign app$wci_s_0_MByteEn = cp$wci_Vm_0_MByteEn ;
  assign app$wci_s_0_MCmd = cp$wci_Vm_0_MCmd ;
  assign app$wci_s_0_MData = cp$wci_Vm_0_MData ;
  assign app$wci_s_0_MFlag = cp$wci_Vm_0_MFlag ;
  assign app$wci_s_1_MAddr = cp$wci_Vm_1_MAddr ;
  assign app$wci_s_1_MAddrSpace = cp$wci_Vm_1_MAddrSpace ;
  assign app$wci_s_1_MByteEn = cp$wci_Vm_1_MByteEn ;
  assign app$wci_s_1_MCmd = cp$wci_Vm_1_MCmd ;
  assign app$wci_s_1_MData = cp$wci_Vm_1_MData ;
  assign app$wci_s_1_MFlag = cp$wci_Vm_1_MFlag ;
  assign app$wci_s_2_MAddr = cp$wci_Vm_2_MAddr ;
  assign app$wci_s_2_MAddrSpace = cp$wci_Vm_2_MAddrSpace ;
  assign app$wci_s_2_MByteEn = cp$wci_Vm_2_MByteEn ;
  assign app$wci_s_2_MCmd = cp$wci_Vm_2_MCmd ;
  assign app$wci_s_2_MData = cp$wci_Vm_2_MData ;
  assign app$wci_s_2_MFlag = cp$wci_Vm_2_MFlag ;
  assign app$wci_s_3_MAddr = cp$wci_Vm_3_MAddr ;
  assign app$wci_s_3_MAddrSpace = cp$wci_Vm_3_MAddrSpace ;
  assign app$wci_s_3_MByteEn = cp$wci_Vm_3_MByteEn ;
  assign app$wci_s_3_MCmd = cp$wci_Vm_3_MCmd ;
  assign app$wci_s_3_MData = cp$wci_Vm_3_MData ;
  assign app$wci_s_3_MFlag = cp$wci_Vm_3_MFlag ;
  assign app$wci_s_4_MAddr = cp$wci_Vm_4_MAddr ;
  assign app$wci_s_4_MAddrSpace = cp$wci_Vm_4_MAddrSpace ;
  assign app$wci_s_4_MByteEn = cp$wci_Vm_4_MByteEn ;
  assign app$wci_s_4_MCmd = cp$wci_Vm_4_MCmd ;
  assign app$wci_s_4_MData = cp$wci_Vm_4_MData ;
  assign app$wci_s_4_MFlag = cp$wci_Vm_4_MFlag ;
  assign app$wci_s_5_MAddr = cp$wci_Vm_5_MAddr ;
  assign app$wci_s_5_MAddrSpace = cp$wci_Vm_5_MAddrSpace ;
  assign app$wci_s_5_MByteEn = cp$wci_Vm_5_MByteEn ;
  assign app$wci_s_5_MCmd = cp$wci_Vm_5_MCmd ;
  assign app$wci_s_5_MData = cp$wci_Vm_5_MData ;
  assign app$wci_s_5_MFlag = cp$wci_Vm_5_MFlag ;
  assign app$wci_s_6_MAddr = cp$wci_Vm_6_MAddr ;
  assign app$wci_s_6_MAddrSpace = cp$wci_Vm_6_MAddrSpace ;
  assign app$wci_s_6_MByteEn = cp$wci_Vm_6_MByteEn ;
  assign app$wci_s_6_MCmd = cp$wci_Vm_6_MCmd ;
  assign app$wci_s_6_MData = cp$wci_Vm_6_MData ;
  assign app$wci_s_6_MFlag = cp$wci_Vm_6_MFlag ;
  assign app$wci_s_7_MAddr = cp$wci_Vm_7_MAddr ;
  assign app$wci_s_7_MAddrSpace = cp$wci_Vm_7_MAddrSpace ;
  assign app$wci_s_7_MByteEn = cp$wci_Vm_7_MByteEn ;
  assign app$wci_s_7_MCmd = cp$wci_Vm_7_MCmd ;
  assign app$wci_s_7_MData = cp$wci_Vm_7_MData ;
  assign app$wci_s_7_MFlag = cp$wci_Vm_7_MFlag ;
  assign app$wmemiM0_SData = 128'h0 ;
  assign app$wmemiM0_SResp = 2'h0 ;
  assign app$wmiM0_SData = 32'h0 ;
  assign app$wmiM0_SFlag = 32'h0 ;
  assign app$wmiM0_SResp = 2'h0 ;
  assign app$wmiM1_SData = 32'h0 ;
  assign app$wmiM1_SFlag = 32'h0 ;
  assign app$wmiM1_SResp = 2'h0 ;
  assign app$wsi_s_adc_MBurstLength = 12'h0 ;
  assign app$wsi_s_adc_MByteEn = 4'h0 ;
  assign app$wsi_s_adc_MCmd = 3'h0 ;
  assign app$wsi_s_adc_MData = 32'h0 ;
  assign app$wsi_s_adc_MReqInfo = 8'h0 ;
  assign app$wti_s_0_MCmd = 3'h0 ;
  assign app$wti_s_0_MData = 64'h0 ;
  assign app$wti_s_1_MCmd = 3'h0 ;
  assign app$wti_s_1_MData = 64'h0 ;
  assign app$wti_s_2_MCmd = 3'h0 ;
  assign app$wti_s_2_MData = 64'h0 ;
  assign app$wmiM0_SThreadBusy = 1'b0 ;
  assign app$wmiM0_SDataThreadBusy = 1'b0 ;
  assign app$wmiM0_SRespLast = 1'b0 ;
  assign app$wmiM0_SReset_n = 1'b0 ;
  assign app$wmiM1_SThreadBusy = 1'b0 ;
  assign app$wmiM1_SDataThreadBusy = 1'b0 ;
  assign app$wmiM1_SRespLast = 1'b0 ;
  assign app$wmiM1_SReset_n = 1'b0 ;
  assign app$wmemiM0_SRespLast = 1'b0 ;
  assign app$wmemiM0_SCmdAccept = 1'b0 ;
  assign app$wmemiM0_SDataAccept = 1'b0 ;
  assign app$wsi_s_adc_MReqLast = 1'b0 ;
  assign app$wsi_s_adc_MBurstPrecise = 1'b0 ;
  assign app$wsi_s_adc_MReset_n = 1'b0 ;
  assign app$wsi_m_dac_SThreadBusy = 1'b0 ;
  assign app$wsi_m_dac_SReset_n = 1'b0 ;

  // submodule cp
  assign cp$gps_ppsSyncIn_x = 1'b0 ;
  assign cp$server_request_put = simDCP$client_request_get ;
  assign cp$switch_x = 3'h0 ;
  assign cp$uuid_arg = 512'h0 ;
  assign cp$wci_Vm_0_SData = app$wci_s_0_SData ;
  assign cp$wci_Vm_0_SFlag = app$wci_s_0_SFlag ;
  assign cp$wci_Vm_0_SResp = app$wci_s_0_SResp ;
  assign cp$wci_Vm_10_SData = 32'h0 ;
  assign cp$wci_Vm_10_SFlag = 2'h0 ;
  assign cp$wci_Vm_10_SResp = 2'h0 ;
  assign cp$wci_Vm_11_SData = 32'h0 ;
  assign cp$wci_Vm_11_SFlag = 2'h0 ;
  assign cp$wci_Vm_11_SResp = 2'h0 ;
  assign cp$wci_Vm_12_SData = 32'h0 ;
  assign cp$wci_Vm_12_SFlag = 2'h0 ;
  assign cp$wci_Vm_12_SResp = 2'h0 ;
  assign cp$wci_Vm_13_SData = 32'h0 ;
  assign cp$wci_Vm_13_SFlag = 2'h0 ;
  assign cp$wci_Vm_13_SResp = 2'h0 ;
  assign cp$wci_Vm_14_SData = 32'h0 ;
  assign cp$wci_Vm_14_SFlag = 2'h0 ;
  assign cp$wci_Vm_14_SResp = 2'h0 ;
  assign cp$wci_Vm_1_SData = app$wci_s_1_SData ;
  assign cp$wci_Vm_1_SFlag = app$wci_s_1_SFlag ;
  assign cp$wci_Vm_1_SResp = app$wci_s_1_SResp ;
  assign cp$wci_Vm_2_SData = app$wci_s_2_SData ;
  assign cp$wci_Vm_2_SFlag = app$wci_s_2_SFlag ;
  assign cp$wci_Vm_2_SResp = app$wci_s_2_SResp ;
  assign cp$wci_Vm_3_SData = app$wci_s_3_SData ;
  assign cp$wci_Vm_3_SFlag = app$wci_s_3_SFlag ;
  assign cp$wci_Vm_3_SResp = app$wci_s_3_SResp ;
  assign cp$wci_Vm_4_SData = app$wci_s_4_SData ;
  assign cp$wci_Vm_4_SFlag = app$wci_s_4_SFlag ;
  assign cp$wci_Vm_4_SResp = app$wci_s_4_SResp ;
  assign cp$wci_Vm_5_SData = app$wci_s_5_SData ;
  assign cp$wci_Vm_5_SFlag = app$wci_s_5_SFlag ;
  assign cp$wci_Vm_5_SResp = app$wci_s_5_SResp ;
  assign cp$wci_Vm_6_SData = app$wci_s_6_SData ;
  assign cp$wci_Vm_6_SFlag = app$wci_s_6_SFlag ;
  assign cp$wci_Vm_6_SResp = app$wci_s_6_SResp ;
  assign cp$wci_Vm_7_SData = app$wci_s_7_SData ;
  assign cp$wci_Vm_7_SFlag = app$wci_s_7_SFlag ;
  assign cp$wci_Vm_7_SResp = app$wci_s_7_SResp ;
  assign cp$wci_Vm_8_SData = 32'h0 ;
  assign cp$wci_Vm_8_SFlag = 2'h0 ;
  assign cp$wci_Vm_8_SResp = 2'h0 ;
  assign cp$wci_Vm_9_SData = 32'h0 ;
  assign cp$wci_Vm_9_SFlag = 2'h0 ;
  assign cp$wci_Vm_9_SResp = 2'h0 ;
  assign cp$EN_server_request_put =
	     simDCP$RDY_client_request_get && cp$RDY_server_request_put ;
  assign cp$EN_server_response_get =
	     simDCP$RDY_client_response_put && cp$RDY_server_response_get ;
  assign cp$wci_Vm_0_SThreadBusy = app$wci_s_0_SThreadBusy ;
  assign cp$wci_Vm_1_SThreadBusy = app$wci_s_1_SThreadBusy ;
  assign cp$wci_Vm_2_SThreadBusy = app$wci_s_2_SThreadBusy ;
  assign cp$wci_Vm_3_SThreadBusy = app$wci_s_3_SThreadBusy ;
  assign cp$wci_Vm_4_SThreadBusy = app$wci_s_4_SThreadBusy ;
  assign cp$wci_Vm_5_SThreadBusy = app$wci_s_5_SThreadBusy ;
  assign cp$wci_Vm_6_SThreadBusy = app$wci_s_6_SThreadBusy ;
  assign cp$wci_Vm_7_SThreadBusy = app$wci_s_7_SThreadBusy ;
  assign cp$wci_Vm_8_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_9_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_10_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_11_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_12_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_13_SThreadBusy = 1'b0 ;
  assign cp$wci_Vm_14_SThreadBusy = 1'b0 ;

  // submodule simDCP
  assign simDCP$client_response_put = cp$server_response_get ;
  assign simDCP$host_request_put = simIO$host_request_get ;
  assign simDCP$EN_host_request_put =
	     simDCP$RDY_host_request_put && simIO$RDY_host_request_get ;
  assign simDCP$EN_host_response_get =
	     simDCP$RDY_host_response_get && simIO$RDY_host_response_put ;
  assign simDCP$EN_client_request_get =
	     simDCP$RDY_client_request_get && cp$RDY_server_request_put ;
  assign simDCP$EN_client_response_put =
	     simDCP$RDY_client_response_put && cp$RDY_server_response_get ;

  // submodule simIO
  assign simIO$host_response_put = simDCP$host_response_get ;
  assign simIO$EN_host_request_get =
	     simDCP$RDY_host_request_put && simIO$RDY_host_request_get ;
  assign simIO$EN_host_response_put =
	     simDCP$RDY_host_response_get && simIO$RDY_host_response_put ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        simCycle <= `BSV_ASSIGNMENT_DELAY 16'd0;
      end
    else
      begin
        if (simCycle$EN) simCycle <= `BSV_ASSIGNMENT_DELAY simCycle$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    simCycle = 16'hAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTB19

